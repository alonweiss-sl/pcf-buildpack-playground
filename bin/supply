#!/usr/bin/env bash

echo "-----> Playground/supply"

BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

if [[ -z "$SL_TOKEN" ]]; then
  echo "Error: environment variable SL_TOKEN is required and was not found"
  exit 1
fi

echo "BIN_DIR=${BIN_DIR}"
echo "ROOT_DIR=${ROOT_DIR}"
echo "BUILD_DIR=${BUILD_DIR}"
echo "CACHE_DIR=${CACHE_DIR}"
echo "ENV_DIR=${ENV_DIR}"

echo "       Installing Sealights agent"
env
mkdir -p $BUILD_DIR/sealights
decode_base64_url() {
  local len=$((${#1} % 4))
  local result="$1"
  if [ $len -eq 2 ]; then result="$1"'=='
  elif [ $len -eq 3 ]; then result="$1"'=' 
  fi
  echo "$result" | tr '_-' '/+' | openssl enc -d -base64
}

decode_jwt_server(){
   decode_base64_url $(echo -n $1 | cut -d "." -f 2) | jq '."x-sl-server"' -r
}
if [[ ! -f $BUILD_DIR/sealights/sl-test-listener.jar ]]
	#TODO: Run this only if $BUILD_DIR/sealights/sl-test-listener.jar does not exist

	SL_AGENT_DOWNLOAD_URL=`decode_jwt_server $SL_TOKEN`/v2/agents/sealights-java/recommended/download
	echo "       Downloading sealights agent from $SL_AGENT_DOWNLOAD_URL to $BUILD_DIR/sealights/agent.zip"
	curl -L $SL_AGENT_DOWNLOAD_URL -H "Authorization: Bearer $SL_TOKEN" --output "$BUILD_DIR/sealights/agent.zip"
	cd $BUILD_DIR/sealights
	set -e
	unzip $BUILD_DIR/sealights/agent.zip

	if [[ ! -f $BUILD_DIR/sealights/sl-test-listener.jar ]]
		echo Error unpacking zip file
		cat $BUILD_DIR/sealights/agent.zip
		exit 1
	fi

	cat $BUILD_DIR/sealights/sealights-java-version.txt
fi
export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -javaagent:$BUILD_DIR/sealights/sl-test-listener.jar -Dprop1=val1 -Dsl.buildSessionId=$SL_BUILD_SESSION_ID"
